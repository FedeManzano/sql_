USE db_viajes;


-- 1. Indique cuales son los autos con mayor cantidad de kilómetros realizados en el
-- último mes.GOCREATE VIEW vw_Cantidad_Acumulada_Kms_AutomovilAS	SELECT v.MatriculaAutomovil AUTOMOVIL, SUM(v.CostoKms) ACUM_X_AUTO	FROM Viaje v	GROUP BY v.MatriculaAutomovilGOCREATE VIEW vw_MAX_Cantidad_Acumulada_Kms_AutomovilAS	SELECT MAX(CAKA.ACUM_X_AUTO) MAX_ACUM	FROM vw_Cantidad_Acumulada_Kms_Automovil AS CAKAGOCREATE VIEW vw_Automovil_Con_Mas_KM_AcumAS	SELECT *	FROM vw_Cantidad_Acumulada_Kms_Automovil AS CAKA	WHERE CAKA.ACUM_X_AUTO >= 	(		SELECT MA.MAX_ACUM		FROM vw_MAX_Cantidad_Acumulada_Kms_Automovil MA	)GOSELECT a.*FROM Automovil aWHERE a.MatriculaAutomovil IN(	SELECT MA.AUTOMOVIL	FROM vw_Automovil_Con_Mas_KM_Acum MA)-- 2. Indique los clientes que más viajes hayan realizado con el mismo chofer.SELECT v.DniCliente CLIENTE, v.NroLicenciaChofer LICENCIA ,COUNT(v.NroLicenciaChofer) CANTIDADFROM Viaje vGROUP BY v.DniCliente, v.NroLicenciaChoferHAVING COUNT(v.NroLicenciaChofer) >=(	SELECT MAX(CANTIDAD) MAX_CANTIDAD	FROM	(		SELECT v.DniCliente CLIENTE, v.NroLicenciaChofer LICENCIA ,COUNT(v.NroLicenciaChofer) CANTIDAD		FROM Viaje v		GROUP BY v.DniCliente, v.NroLicenciaChofer	) AS CANT_MISMO_CHOFER)GOCREATE VIEW vw_Clientes_Que_Viajaron_Con_Mismo_ChoferAS	SELECT v.DniCliente CLIENTE, v.NroLicenciaChofer LICENCIA ,COUNT(v.NroLicenciaChofer) CANTIDAD	FROM Viaje v	GROUP BY v.DniCliente, v.NroLicenciaChoferGOCREATE VIEW vw_Clientes_Que_Mas_Viajaron_Con_Mismo_ChoferAS	SELECT MAX(CQVCMC.CANTIDAD) MAX_CANTIDAD	FROM vw_Clientes_Que_Viajaron_Con_Mismo_Chofer AS CQVCMCGOCREATE VIEW vw_Clientes_Max_CantidadAS	SELECT CQVCMC.CLIENTE, CQVCMC.LICENCIA, CQVCMC.CANTIDAD	FROM vw_Clientes_Que_Viajaron_Con_Mismo_Chofer AS CQVCMC	WHERE CQVCMC.CANTIDAD >=	(		SELECT CQMVCMC.MAX_CANTIDAD		FROM vw_Clientes_Que_Mas_Viajaron_Con_Mismo_Chofer AS CQMVCMC	)GOSELECT * FROM vw_Clientes_Max_Cantidad-- 3. Indique el o los clientes con mayor cantidad de viajes en este añoSELECT v.DniCliente AS DNI_CLIENTE, COUNT(v.FechaHoraInicio) AS CANTIDAD_VIAJESFROM Viaje vGROUP BY v.DniClienteHAVING COUNT(v.FechaHoraInicio) >=(	SELECT MAX(CANT_VIAJES_CLIENTES.CANTIDAD_VIAJES)	FROM 	(		SELECT v.DniCliente AS DNI_CLIENTE, COUNT(v.FechaHoraInicio) AS CANTIDAD_VIAJES		FROM Viaje v		WHERE v.NroLicenciaChofer IN		(			SELECT vi.NroLicenciaChofer			FROM Viaje vi			WHERE vi.FechaHoraInicio = v.FechaHoraInicio		)		GROUP BY v.DniCliente	) AS CANT_VIAJES_CLIENTES)-- 4. Obtenga nombre y apellido de los choferes que no manejaron todos los vehículos
-- que disponemos.SELECT *FROM Chofer choWHERE cho.NroLicenciaChofer NOT IN (	SELECT v.NroLicenciaChofer	FROM Viaje v	GROUP BY v.NroLicenciaChofer	HAVING COUNT(DISTINCT v.MatriculaAutomovil) >= 	(		SELECT COUNT(aut.MatriculaAutomovil) 		FROM Automovil aut	))-- 5. Obtenga el nombre y apellido de los clientes que hayan viajado en todos nuestros
-- autos.SELECT v.DniCliente, COUNT(DISTINCT v.MatriculaAutomovil)FROM Viaje v GROUP BY v.DniClienteHAVING COUNT(DISTINCT v.MatriculaAutomovil) >= (	SELECT COUNT(MatriculaAutomovil)	FROM Automovil )-- 6. Queremos conocer el tiempo de espera promedio de los viajes de los últimos 2
-- mesesSELECT SUM(v.EsperaTotal) / (	SELECT CANTIDAD_VIAJES_TOTALES 	FROM vw_Cantidad_Viajes_Totales) AS PROMEDIO_TIEMPO_ESPERA_MINUTOSFROM Viaje v -- 7. Indique los kilómetros realizados en viajes por cada auto.SELECT v.MatriculaAutomovil, SUM(v.kmTotales) AS KM_TOTALESFROM Viaje vGROUP BY v.MatriculaAutomovil-- 8. Indique el costo promedio de los viajes realizados por cada auto.SELECT v.MatriculaAutomovil AUTOMOVIL, (SUM(v.CostoKms) + SUM(v.CostoEspera)) / CANTIDAD_VIAJE_AUTOFROM Viaje v INNER JOIN (	SELECT v1.MatriculaAutomovil AUTOMOVIL, COUNT(*) CANTIDAD_VIAJE_AUTO	FROM Viaje v1 INNER JOIN Viaje v2 ON 	v1.FechaHoraInicio = v2.FechaHoraInicio AND 	v1.NroLicenciaChofer = v2.NroLicenciaChofer	GROUP BY v1.MatriculaAutomovil	) AS CANT_AUTO ON CANT_AUTO.AUTOMOVIL = v.MatriculaAutomovilWHERE CANTIDAD_VIAJE_AUTO > 0GROUP BY v.MatriculaAutomovil, CANT_AUTO.CANTIDAD_VIAJE_AUTOGOCREATE VIEW vw_Cantidad_Viajes_AutomovilAS	SELECT v1.MatriculaAutomovil AUTOMOVIL, COUNT(*) CANTIDAD_VIAJES	FROM Viaje v1 INNER JOIN Viaje v2 ON v1.FechaHoraInicio = v2.FechaHoraInicio		AND v1.NroLicenciaChofer = v2.NroLicenciaChofer	GROUP BY v1.MatriculaAutomovil	HAVING COUNT(*) > 0GOSELECT v.MatriculaAutomovil, 		(SUM(v.CostoKms) + SUM(v.CostoEspera)) / CVA.CANTIDAD_VIAJESFROM Viaje v INNER JOIN vw_Cantidad_Viajes_Automovil CVA ON CVA.AUTOMOVIL = v.MatriculaAutomovilGROUP BY v.MatriculaAutomovil, CVA.CANTIDAD_VIAJES-- 9. Indique el costo total de los viajes realizados por cada chofer en el último mes.SELECT v.NroLicenciaChofer, SUM(v.CostoEspera) + SUM(v.CostoKms)FROM Viaje v--WHERE v.FechaHoraInicio >= GETDATE() - 30GROUP BY v.NroLicenciaChofer--10. Indique la fecha inicial, el chofer y el cliente que hayan realizado el viaje más largo
-- de este año.SELECT v.FechaHoraInicio, v.NroLicenciaChofer, v.DniClienteFROM Viaje vWHERE v.kmTotales >=(	SELECT MAX(v1.kmTotales) 	FROM Viaje v1 INNER JOIN Viaje v2 ON 		v1.FechaHoraInicio = v2.FechaHoraInicio AND		v1.NroLicenciaChofer <> v2.NroLicenciaChofer)GOALTER VIEW vw_Cantidad_Viajes_TotalesAS	SELECT SUM(CANTIDAD_X_FINICIO.CANTI_X_FECHA) CANTIDAD_VIAJES_TOTALES	FROM 	(		SELECT v.FechaHoraInicio, COUNT(*) CANTI_X_FECHA		FROM Viaje v		GROUP BY v.FechaHoraInicio		HAVING COUNT(*) > 0	) AS CANTIDAD_X_FINICIO	